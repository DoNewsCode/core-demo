// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package app

import (
	"github.com/DoNewsCode/skeleton/app/book"
	"github.com/DoNewsCode/skeleton/app/user"
	"github.com/DoNewsCode/skeleton/internal/repositories"
	"github.com/DoNewsCode/std/pkg/contract"
	"github.com/go-kit/kit/log"
	"github.com/go-kit/kit/metrics"
	"github.com/go-redis/redis/v8"
	"github.com/opentracing/opentracing-go"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InjectAppModule(db *gorm.DB, histogram metrics.Histogram, tracer opentracing.Tracer, logger log.Logger, env contract.Env, redis2 redis.UniversalClient) (AppModule, error) {
	userDao := repositories.NewUserDao(db)
	service := user.Service{
		UserRepository: userDao,
	}
	transport := user.NewTransport(service, logger, env, tracer, histogram)
	handler := book.Handler{
		Redis: redis2,
	}
	bookTransport := book.NewTransport(handler, logger, histogram, tracer)
	appModule := AppModule{
		UserTransport: transport,
		BookTransport: bookTransport,
	}
	return appModule, nil
}
