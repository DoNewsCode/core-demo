syntax = "proto3";

package app.user;

import "google/api/annotations.proto";
import "protoc-gen-validate/validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "app.pb";

option (options.openapiv2_swagger) = {
  info: {
    title: "Skeleton";
    version: "0.1.0";
    contact: {
      name: "developer";
      email: "developer@donews.com";
    };
  };
  base_path: "/app/user"
  security_definitions: {
    security: {
      key: "JWT",
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
      }
    }
  }
  security: {
    security_requirement: {
      key: "JWT";
      value: {};
    }
  }
  consumes: "application/json";
  produces: "application/json";
};

// 用户中心
service User {
  // 用户从未登录状态注册或登录时调用。如果用户已登录，需要绑定手机号或微信号，请使用bind接口。
  rpc Login(UserLoginRequest) returns (UserInfoReply) {
    option (options.openapiv2_operation) = {
      tags: "登录"
    };
    option (google.api.http) = {
      post: "/login"
      body: "*"
    };
  }
}

message UserLoginRequest {
    int32 id = 1 [
      (validate.rules).int32.gt = 0
    ];
}

message UserInfoReply {
    int64 id = 1;
    string name = 2;
    string created_at = 3;
}
